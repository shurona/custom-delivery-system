# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

# 여기 서비스 특정
name: Webest store Image CI/CD with ECR

on:
  push:
    paths:
      - service/store/**
      - core/**
      - .github/workflows/store-ci.yml
      - gradlew
      - build_service.sh
      - push_to_ecr.sh
      - build.gradle
      - gradlew.bat
      - settings.gradle
    branches: [ "main", "dev" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

      # 여기 서비스 특정
      - name: Build with Gradle
        run: ./build_service.sh store

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # docker compose 를 이용해서 여러 이미지를 모두 빌드하고, 별도의 script를 사용해서 이미지를 push 합니다.
      - name: Build, Tag and Push docker image to AWS ECR
        # 여기 서비스 특정
        run: |
          docker compose build store-service  
        #          ./push_to_ecr.sh store
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          EUREKA_SERVER_URL: ${{ vars.EUREKA_SERVER_URL }}
          DEV_REDIS_HOST: ${{ secrets.DEV_REDIS_HOST }}
          DEV_REDIS_PASSWORD: ${{ secrets.DEV_REDIS_PASSWORD }}
          DEV_REDIS_USERNAME: ${{ secrets.DEV_REDIS_USERNAME }}
          NAVER_CLIENT_ID: ${{ secrets.NAVER_CLIENT_ID }}
          NAVER_CLIENT_SECRET: ${{ secrets.NAVER_CLIENT_SECRET }}
          ECR_REGISTRY: ${{ vars.ECR_REGISTRY }}
          ECR_NAMESPACE: ${{ vars.ECR_NAMESPACE }}



